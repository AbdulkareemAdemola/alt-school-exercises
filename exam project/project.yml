---
- hosts: webservers
  become: yes
  vars:
    db_password: ademola1
    db_name: ademola
    db_user: ademola
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Installation install software-properties-common
      apt: name=software-properties-common

    - name: "Repo PHP 8.1"
      apt_repository:
        repo="ppa:ondrej/php"

    - name: "Updating the repo"
      apt: update_cache=yes

    - name: Installation PHP 8.1
      apt: name=php8.1 state=present

    - name: install lamp stack
      apt:
        pkg:
          - php8.1-mysql
          - php8.1-curl
          - php8.1-xml
          - php8.1-bcmath
          - php8.1-gd
          - php8.1-mbstring
          - php8.1-zip
          - php8.1-common
          - php8.1-cli
        state: present
        update_cache: yes

    - name: install apache2
      apt: name=apache2 state=present

    - name: install git
      apt: name=git state=present

    - name: install python pip
      shell: sudo python3.7 -m pip install pip
  
 - name: install python pip
      shell: sudo python3.7 -m pip install pip

    - name: install python3
      apt: name=python3 state=present

    - name: install python2
      apt: name=python2 state=present

    - name: "Install ansible python3 mysql dependency"
      apt: name=python3-mysqldb state=latest


    - name: Installing Mysql  and dependencies
      package:
        name:
          - mysql-server
          - mysql-client
          - python3-mysqldb
          - libmysqlclient-dev
          - makepasswd
          - python3-pip
          - python3-mysql.connector
        state: present
        update_cache: yes

    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes
    - name: creating mysql user
      mysql_user:
        name: ademola
        password: ademola
        priv: '*.*:ALL'
        host: '%'
        state: present

    - name: creating medium_db
      mysql_db:
        name: ademola
        state: present
    command: mkdir skel
       args:
         chdir: /var/www/
         creates: place

     - name: Clone the project repo into a new directory
       git:
         repo: https:// find it
         dest: /var/www/place
         clone: yes
         update: no

     - name: Create the web.php file in the routes directory
       ansible.builtin.copy:
         dest: /var/www/place/routes/web.php
         content: |
           <?php

           Route::get('/', function () {
               return view('welcome');
           });

     - name: Create an apache virtual host configuration file
       ansible.builtin.copy:
         dest: /var/www/place/.env
         content: |
           APP_NAME="Laravel Realworld Example App"
           APP_ENV=local
           APP_KEY=
           APP_DEBUG=true
           APP_URL=http://localhost
           APP_PORT=3000

           LOG_CHANNEL=stack
           LOG_DEPRECATIONS_CHANNEL=null
           LOG_LEVEL=debug

           DB_CONNECTION=mysql
           DB_HOST=localhost
           DB_PORT=3306
           DB_DATABASE=laravel-realworld
           DB_USERNAME=ademola
           DB_PASSWORD=ademola
   CACHE_DRIVER=file
           FILESYSTEM_DISK=local
           QUEUE_CONNECTION=sync
           SESSION_DRIVER=file
           SESSION_LIFETIME=120

           MEMCACHED_HOST=127.0.0.1

           REDIS_HOST=127.0.0.1
           REDIS_PASSWORD=null
           REDIS_PORT=6379

           MAIL_MAILER=smtp
           MAIL_HOST=mailhog
           MAIL_PORT=1025
           MAIL_USERNAME=null
           MAIL_PASSWORD=null
           MAIL_ENCRYPTION=null
           MAIL_FROM_ADDRESS="muizabdul73@gmail.com"
           MAIL_FROM_NAME="${APP_NAME}"

           AWS_ACCESS_KEY_ID=
           AWS_SECRET_ACCESS_KEY=
           AWS_DEFAULT_REGION=us-east-1
           AWS_BUCKET=
           AWS_USE_PATH_STYLE_ENDPOINT=false

           PUSHER_APP_ID=
           PUSHER_APP_KEY=
           PUSHER_APP_SECRET=
           PUSHER_APP_CLUSTER=mt1

           MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
           MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

           L5_SWAGGER_GENERATE_ALWAYS=true
           SAIL_XDEBUG_MODE=develop,debug
           SAIL_SKIP_CHECKS=true


 # Composer
     - name: Download Composer Installer
       command: curl -s https://getcomposer.org/installer | php
          shell: chown -R root:root /var/www/place

     - name: Make composer executable by user
       file:
         path: /var/www/laravel/place
         mode: '755'

     - name: Download and install all requirements outlined in the /var/www/skel/composer.lock
       shell: composer install --no-interaction      args:
         chdir: /var/www/place



     - name: the php artisan
       ansible.builtin.shell: php artisan key:generate
       args:
         chdir: /var/www/place

     - name: the php artisan
       ansible.builtin.shell: php artisan config:cache
       args:
         chdir: /var/www/place

     - name:  the php artisan
       ansible.builtin.shell:
       args:
         chdir: /var/www/place

     - name: Create an apache virtual host configuration file
       ansible.builtin.copy:
         dest: /etc/apache2/sites-available/skel.conf
         content: |
           <VirtualHost *:80>
               ServerAdmin admin@skel.me
               ServerName skel.me
               ServerAlias www.skel.me
               DocumentRoot /var/www/place/public

               <Directory /var/www/place/public>
                   AllowOverride All
               </Directory>
            ErrorLog ${APACHE_LOG_DIR}/error.log
               CustomLog ${APACHE_LOG_DIR}/access.log combined
           </VirtualHost>

     - name: Enable a2enmod rewrite
       shell: a2dissite 000-default.conf

     - name: Disable default apache page and enable laravel page
        shell: a2ensite laravel.conf

     - name: Enable laravel page
       shell: a2enmod rewrite

     - name: Change file ownership, group and permissions
       ansible.builtin.file:
         path: /var/www/place
         state: directory
         recurse: yes
         owner: www-data
         group: www-data
         mode: '775'

     - name: Restart apache web server
       service:
        name: apache2
        state: restarted
